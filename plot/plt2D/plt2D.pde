Boolean once = true;

float[] cross = {
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 6, 2, -13, 5, 23, -17, 6, 16, 6, 11, -15, -15, 20, 2, -34, 27, 11, 32, -48, 13, 19, -20, -4, 7, 15, -49, 30, -11, 35, -2, -12, -15, 16, 13, -18, -12, 18, 12, -35, 60, 55, 16, 7, -19, 55, -81, 42, -20, 29, -18, -28, 63, 28, -6, -43, 2, -18, -32, -63, 21, -49, 44, -41, 63, 3, 25, -42, -7, 6, -10, 59, 18, 99, 37, -14, 95, 7, -8, -16, -17, 15, 2, -103, -32, -65, 18, 89, -53, -15, -55, -72, -2, 38, -46, -17, -25, 23, 29, -8, 20, -39, -8, -101, -104, 49, 46, -67, -25, 22, 38, 45, -2, -29, -70, 9, 103, 45, -8, -78, -26, 4, -154, -30, 39, 6, -7, -65, -31, -41, -17, -34, -85, -9, 69, -11, 4, -102, -108, 5, 83, -68, -112, -27, 48, 99, 84, 36, 51, 7, 70, -39, 58, 66, -60, 4, 0, 19, 37, -1, -141, -37, 45, 40, -24, 74, -48, 6, 159, 38, 84, 43, -27, 3, -82, 118, -72, 92, 11, -74, -245, -82, -124, -78, 255, 165, 103, -35, -165, -194, -190, -85, 236, 270, 390, 228, -40, -233, -419, -227, -91, 286, 383, 422, 290, -26, -461, -510, -231, -19, 468, 319, 352, -186, -397, -743, -620, -229, 12, 564, 594, 448, 10, -372, -576, -432, -149, 307, 643, 611, 651, 109, -256, -447, -575, -412, -203, -10, 222, 558, 594, 340, -1, -378, -764, -725, -474, 394, 964, 1193, 890, 57, -792, -1279, -1484, -838, 358, 1351, 1906, 1322, 44, -1107, -1973, -1611, -642, 709, 1868, 2036, 1344, -108, -1547, -2324, -1968, -871, 835, 2049, 2285, 1364, -235, -1777, -2448, -1807, -353, 1585, 2779, 2468, 1069, -846, -2411, -3017, -1942, -165, 1698, 2992, 2624, 984, -1287, -2591, -2914, -1935, 470, 2001, 2961, 2660, 605, -1368, -2732, -2684, -1304, 667, 2230, 2672, 1800, 213, -1613, -2532, -2147, -876, 865, 2216, 2309, 1561, 406, -1365, -2142, -2146, -994, 771, 1830, 2600, 1620, 85, -1639, -2725, -2467, -762, 1031, 2598, 2659, 1578, -126, -2154, -2806, -2258, -479, 1336, 2956, 2806, 1254, -826, -2791, -3256, -2168, 148, 2190, 3490, 2920, 1215, -971, -2797, -3449, -2534, -27, 2309, 3861, 3596, 1757, -957, -3382, -4644, -3990, -1715, 1802, 4473, 6084, 4925, 1106, -3475, -7390, -7981, -4851, 1312, 7404, 11129, 9547, 2679, -5850, -13119, -14423, -8671, 2362, 13288, 18637, 15504, 3927, -10801, -21672, -22451, -11643, 5714, 21912, 28628, 21139, 2128, -19644, -33086, -30862, -12531, 13027, 34093, 39076, 24756, -2965, -30674, -44710, -36726, -9915, 23214, 46514, 46693, 23949, -11937, -42903, -53636, -37967, -2471, 34722, 55794, 49410, 18208, -22459, -52878, -57036, -33204, 7263, 44623, 59741, 45443, 9009, -32090, -56721, -53578, -24112, 16530, 48807, 56189, 35937, -1322, -36859, -53721, -44023, -13128, 22959, 46496, 46841, 24281, -8990, -36238, -45117, -31723, -3777, 24493, 39532, 34676, 13720, -12569, -31019, -33385, -19858, 2088, 21379, 28892, 22187, 5695, -12034, -22342, -21125, -10177, 4404, 15527, 17927, 12165, 1176, -8721, -13529, -11470, -4627, 3623, 8758, 9245, 5632, -6, -4385, -6148, -4566, -1616, 1276, 3021, 2900, 1821, 465, -496, -917, -965, -1244, -1147, -681, 42, 673, 1838, 1736, 1266, -95, -1379, -2199, -2288, -951, 483, 2049, 2491, 2022, 44, -1409, -2453, -2536, -1103, 617, 2262, 2676, 1897, 23, -1633, -2767, -2570, -942, 888, 2463, 2764, 1599, -267, -1766, -2487, -2145, -600, 1294, 2220, 2272, 972, -381, -1670, -2098, -1454, -241, 1510, 2038, 2007, 554, -614, -1844, -2073, -1179, 108, 1389, 1784, 1228, 371, -801, -1485, -1345, -813, 411, 1187, 1326, 890, -84, -806, -1290, -982, -293, 504, 834, 976, 489, -94, -891, -913, -606, -146, 642, 865, 925, 59, -338, -872, -749, -429, 233, 638, 545, 477, -49, -536, -494, -280, 150, 363, 519, 450, 158, -235, -492, -477, -273, -108, 470, 569, 434, 156, -178, -445, -358, -107, 33, 147, 348, 544, 38, 9, -291, -362, -271, -146, 240, 295, 295, 269, 24, -192, -294, -10, -113, 92, 254, 26, 206, 33, 6, -155, -76, -43, -188, -8, 32, 200, 305, -1, 95, -41, -188, -215, -107, 116, 91, 236, 148, -63, -124, -175, -181, -24, 93, 151, 99, 131, 90, 47, -69, -223, -143, -96, 26, 199, 67, 76, -46, -19, -123, -53, 134, -54, 1, 62, -8, 10, -77, 49, 62, -62, 43, -30, 72, 8, 55, -13, -39, 58, 7, 114, -3, 45, 62, -69, 50, -33, -35, 95, 1, 99, -77, -19, -6, 2, 13, 15, 41, -31, -31, 74, -33, -10, -33, 9, -83, 34, -7, 98, -41, -30, -5, -18, -8, -44, -2, -7, 9, -13, 46, -3, -46, 5, -12, 4, 9, 12, -4, -38, -3, -8, -48, -14, -36, -2, -27, 14, 43, 9, 30, -11, -53, -9, -63, 17, -17, 5, 18, 5, 19, 27, -22, 38, -17, 3, 0, 12, 0, 4, 15, 15, -12, 8, -7, -8, -2, 3, -5, -8, 1, 6
};

float[] sin1 = {
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -4, -2, 4, -1, -3, 1, 0, -1, 1, 0, -2, 0, -3, 4, -2, 3, -2, 0, 0, 2, -2, 0, 0, -2, -3, -2, 0, -2, -4, -1, 0, -2, -4, -2, -3, 1, -2, 2, -1, 0, 4, 2, 3, -2, 0, 4, -1, -3, -3, 2, 2, 0, 1, -4, 0, -1, -3, -2, -4, 2, 4, 4, -1, -3, 0, 0, 2, 3, 2, -2, -1, -1, 0, 3, 0, -3, 0, 1, 2, 3, 0, -1, -2, 4, 4, -4, -1, 4, 0, 0, 3, -1, 0, -2, 4, 4, 3, 0, 1, 0, 0, 1, 3, 0, -1, 0, 1, -3, -3, -4, -3, 0, 1, 3, 1, 0, -1, -3, 3, -3, 2, -2, 0, -3, 1, -2, -1, -2, 2, 0, 0, -1, -1, 2, 4, -3, -3, -3, 0, 2, 0, 4, 3, 0, -2, 3, 0, -1, 0, 1, -1, -2, -4, -2, 3, -4, 4, 3, -2, 2, -4, -3, -2, 4, -4, 2, -3, 4, 0, -4, 1, -2, 4, 1, 4, 2, 2, 1, 0, -3, -7, -8, -4, -3, 6, 7, 3, 5, -4, -8, -12, -11, 3, 12, 18, 14, 4, -9, -14, -18, -2, 3, 17, 17, 7, 0, -19, -21, -13, -1, 8, 23, 22, 12, -1, -15, -21, -18, 2, 18, 20, 20, 3, -14, -22, -21, -13, 3, 18, 25, 13, 3, -7, -15, -20, -9, 2, 20, 16, 6, -5, -15, -12, -11, -2, 6, 15, 14, 5, 0, -5, -10, -3, -4, 2, 7, 5, -2, 3, 0, -5, 3, -1, 0, 4, 1, 0, -1, 4, 0, -4, -3, -1, -1, -2, 0, 0, -4, -2, 4, 0, -4, -1, -2, 1, 2, 4, -2, -2, -2, -2, -3, -2, 1, -4, 0, 0, -3, 4, -3, -1, 0, -1, 3, 1, -2, -3, 1, 1, 0, 4, -4, 4, 2, 3, 1, -4, -1, -3, 3, 0, 4, 0, -2, 4, -3, 0, 4, 3, -2, -3, 0, 0, -1, 0, 0, -4, 0, 2, 2, 3, -2, -1, -4, -2, -4, 0, 0, -3, -2, 2, -4, -1, -2, 2, -2, -1, 1, -2, -1, 3
};
float[] sin2 = {
  2, 1, -1, -2, 0, 0, -3, -4, 0, -2, 3, 0, 4, 2, 1, -1, -2, 0, 2, -4, 2, 2, 0, 3, -3, 4, 2, -4, 0, -2, 4, 0, 2, 0, 4, 1, -4, 0, -4, -1, -2, 4, 3, 0, 2, 1, -4, 0, 0, 3, 1, -1, 3, -1, 4, -4, 3, -2, 0, 3, 2, -3, 3, 0, 3, -4, -2, 0, 0, 3, -1, 0, -4, -4, -3, -1, 2, 0, -3, -4, 4, 1, -3, -3, 2, -3, -4, 0, 1, 0, -3, 4, -4, 2, -4, 2, 2, -4, -1, 0, -3, 3, 4, -1, -3, -2, -3, -2, 2, -4, -3, -2, 0, -1, 0, 2, 0, 4, -4, -2, 0, -2, 0, 1, -1, -1, 1, -2, -1, 1, 4, -1, -2, 1, 2, 1, 0, 1, -2, -4, -4, -2, 0, 4, -1, 1, -1, 0, 2, 0, 4, -2, 4, -3, -4, 1, 1, 0, 0, 0, 0, 4, 2, -4, 4, -3, -4, -2, -4, 0, -4, -3, 3, 4, -1, 2, 2, 7, 11, 6, -8, -22, -30, -24, -1, 28, 44, 41, 10, -22, -59, -57, -29, 18, 63, 79, 58, 6, -51, -86, -83, -32, 36, 85, 98, 59, -12, -78, -110, -89, -19, 59, 109, 109, 53, -34, -99, -116, -81, 1, 80, 119, 99, 33, -46, -107, -108, -62, 18, 87, 110, 77, 8, -63, -101, -89, -36, 28, 85, 86, 51, -9, -61, -81, -61, -18, 33, 64, 56, 28, -15, -37, -42, -29, 1, 23, 31, 25, 7, -5, -14, -8, 0, -3, -2, -1, -4, 1, 1, -1, -2, 4, 3, -1, 4, 4, 1, 2, 0, -4, 1, -2, -1, -1, 1, 3, 2, 3, 3, 1, -2, 1, -3, 4, 3, -1, -2, 0, -1, 0, 0, -4, 1, -1, -4, -2, 0, 3, 1, 0, 2, -2, 2, -3, 0, -1, 0, -4, -4, -1, -3, 1, -1, 0, 1, -3, 2, 0, 0, 4, 1, 3, 3, 4, 4, 0, -1, -1, -1, 4, 3, 1, 4, 4, -3, -1, 3, 0, 1, 0, -3, 0, 4, 1, -1, -2, -2, -2, 4, -3, -4, 2, 0, 3, -4, 0, 4, -1, 0, 3, 0, 4, 1, -2, 3, -4, -2, 4, -3, 2, 2, 3, 1, -3, -1, -3, 4, 0, -2, -1, 4, -3, 3, -4, -2, -4, -4, -4, 0, 0, 0, 1, 2, 3, 0, 3, -1, 0, -1, 1, 1, 1, 1, -2, -1, 2, 0, 0, 2, -2, -4, 0, 2, 2, -3, 4, 0, 0, -4, 0, 0, -2, 2, -4, 3, 0, -2, 1
};

int c = 217;
int lin = 514;
void setup() {
  size(1200, 800);
  noSmooth();
}


void draw() {
  background(255);
    for (int i = 0; i<cross.length; i++) {
      if (i!=0)
        line((i-1), 200-cross[i-1]/1500, i, 200-cross[i]/1500);
      if (i<sin1.length && i!=0) {
        //line((i-1)+c, 200-cross[i-1], i+c, 200-cross[i]);
        line((i-1)+c, 400-sin1[i-1], i+c, 400-sin1[i]);
        line((i-1)+c, 600-sin2[i-1], i+c, 600-sin2[i]);
      }
    }
    once = false;
    line(cross.length/2, 0, cross.length/2, height);
    line(lin, 0, lin, height);
}


void mouseWheel(MouseEvent event) {
  c -= event.getCount();
  println(c);
}

